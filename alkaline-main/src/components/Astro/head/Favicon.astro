---
/*
 * Component for managing favicon and touch icons across different devices and browsers.
 *
 * Props:
 * - url: string - The URL of the favicon. Default is "/favicon.svg"
 * - isVector: boolean - Indicates if the favicon is a vector image
 *
 * Example usage:
 * <Favicon url="/favicon.svg" isVector={true} />
 * <Favicon url="/favicon.png" isVector={false} />
 *
 * Notes:
 * - Automatically handles multiple sizes for PNG favicons
 * - Supports both vector (SVG) and raster (PNG) formats
 * - Includes Apple touch icon support
 * - Default favicon is /favicon.svg
 */

interface Props {
  // The URL of the favicon //
  url?: string;
  // Indicates if the favicon is a vector image defaults to false  //
  isVector?: boolean;
}

// Destructure props with default values
const { url = "/favicon.svg", isVector = false } = Astro.props;
---

{/* Render the favicon links */}

<link rel="icon" type="image/svg+xml" href={url} />

{
  /* Svg will always be vector, but this allows us to force vector for other files if needed */
}

{
  (isVector || url.endsWith(".svg")) && (
    <>
      <link rel="apple-touch-icon" sizes="180x180" href={url} />
      <link rel="icon" type="image/png" sizes="32x32" href={url} />
      <link rel="icon" type="image/png" sizes="16x16" href={url} />
    </>
  )
}

{
  !isVector && !url.endsWith(".svg") && (
    <>
      <link rel="icon" type="image/png" sizes="192x192" href={url} />
      <link rel="icon" type="image/png" sizes="96x96" href={url} />
      <link rel="icon" type="image/png" sizes="48x48" href={url} />
    </>
  )
}
