name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        run: npm run build

      - name: List dist directory
        run: ls -la ./dist

      - name: Debug Environment Variables
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üîç DEBUG: Sprawdzanie zmiennych ≈õrodowiskowych"
          echo "1. Sprawdzanie czy CLOUDFLARE_API_TOKEN istnieje:"
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "‚ùå CLOUDFLARE_API_TOKEN jest puste"
          else
            echo "‚úÖ CLOUDFLARE_API_TOKEN istnieje (d≈Çugo≈õƒá: ${#CLOUDFLARE_API_TOKEN} znak√≥w)"
            echo "   Pierwsze 8 znak√≥w: ${CLOUDFLARE_API_TOKEN:0:8}..."
          fi

          echo "2. Sprawdzanie czy CLOUDFLARE_ACCOUNT_ID istnieje:"
          if [ -z "$CLOUDFLARE_ACCOUNT_ID" ]; then
            echo "‚ùå CLOUDFLARE_ACCOUNT_ID jest puste"
          else
            echo "‚úÖ CLOUDFLARE_ACCOUNT_ID istnieje: $CLOUDFLARE_ACCOUNT_ID"
          fi

          echo "3. Sprawdzanie wszystkich zmiennych ≈õrodowiskowych z 'CLOUDFLARE':"
          env | grep CLOUDFLARE || echo "Brak zmiennych CLOUDFLARE w ≈õrodowisku"

          echo "4. Sprawdzanie wersji wrangler:"
          npx wrangler --version

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "‚ö†Ô∏è Missing GitHub Secrets - Add these to your repo:"
            echo "1. CLOUDFLARE_API_TOKEN - your Cloudflare API token"
            echo "2. CLOUDFLARE_ACCOUNT_ID - your Cloudflare account ID"
            echo "Built files are ready in ./dist directory"
            echo "Configure custom domain: www.mybonzoaiblog.com"
            exit 1
          fi

          echo "üîß Deploying to Cloudflare Pages..."
          echo "Deploying to project: mybonzoaiblog"
          echo "Custom domain will be: www.mybonzoaiblog.com"

          # Sprawd≈∫ czy token ma prawid≈Çowy format
          if [[ "$CLOUDFLARE_API_TOKEN" == *" "* ]] || [[ "$CLOUDFLARE_API_TOKEN" == *$'\n'* ]]; then
            echo "‚ö†Ô∏è Token zawiera spacje lub znaki nowej linii - to mo≈ºe byƒá problem"
          fi

          # Usu≈Ñ potencjalne bia≈Çe znaki z tokena
          export CLOUDFLARE_API_TOKEN=$(echo "$CLOUDFLARE_API_TOKEN" | tr -d '[:space:]')
          export CLOUDFLARE_ACCOUNT_ID=$(echo "$CLOUDFLARE_ACCOUNT_ID" | tr -d '[:space:]')

          echo "Token po oczyszczeniu (d≈Çugo≈õƒá: ${#CLOUDFLARE_API_TOKEN})"

          npx wrangler pages deploy ./dist
